                    API de M√©tricas de Marketing Digital

Esta √© uma API RESTful robusta, constru√≠da com Python e Django REST Framework, 
desenhada para servir dados de performance de campanhas de marketing. 
A API fornece endpoints seguros para autentica√ß√£o, consulta e manipula√ß√£o de m√©tricas, 
com um sistema de permiss√µes baseado em pap√©is de utilizador.
Este backend foi desenvolvido para suportar um frontend moderno (por exemplo, React, Vue, Angular),
fornecendo dados em formato JSON de forma eficiente e paginada.

- **Autentica√ß√£o Segura por Token:** Utiliza JWT (JSON Web Tokens) para autentica√ß√£o, garantindo que os endpoints de dados sejam seguros.
- **Sistema de Permiss√µes Baseado em Pap√©is:** Acesso a dados sens√≠veis (como custos) √© restrito a utilizadores com o papel de "admin".
- **Filtragem Din√¢mica:** Permite filtrar as m√©tricas por um intervalo de datas (maior ou igual a e menor ou igual a).
- **Ordena√ß√£o Flex√≠vel:** Os dados podem ser ordenados de forma ascendente ou descendente por qualquer uma das colunas dispon√≠veis.
- **Pagina√ß√£o Autom√°tica:** As respostas da API s√£o paginadas para garantir um desempenho r√°pido e eficiente, mesmo com grandes volumes de dados.
- **Script de Carga de Dados:** Inclui um comando de gest√£o customizado para popular a base de dados a partir de ficheiros .csv de forma simples.


üõ†Ô∏è Tecnologias Utilizadas
Backend:
Python 3.10+
Django 4+
Django REST Framework
Simple JWT for DRF (para autentica√ß√£o JWT)
Pandas (para a importa√ß√£o de dados dos CSVs)
django-filter (para a filtragem de dados)
Base de Dados:
SQLite (padr√£o do Django, ideal para desenvolvimento)


üöÄ Configura√ß√£o e Instala√ß√£o
Siga estes passos para configurar e executar o ambiente de desenvolvimento localmente.
Pr√©-requisitos
Python 3.10 ou superior
Git

1. Clone o Reposit√≥rio
```bash
git clone https://github.com/AlexJSMartins/api-metricas-django.git
cd api-metricas-django/projetomonks

2. Crie e ative um ambiente virtual:
No Windows:
python -m venv venv
.\venv\Scripts\activate


No macOS/Linux:
python3 -m venv venv
source venv/bin/activate


3. Instale as depend√™ncias:
pip install -r requirements.txt

4. Coloque os arquivos de dados na raiz do projeto:
Garanta que os arquivos users.csv e metrics.csv est√£o na diretoria principal, ao mesmo n√≠vel do manage.py.

5. Aplique as migra√ß√µes da base de dados:
Este comando ir√° criar a sua base de dados SQLite e as tabelas necess√°rias.
python manage.py migrate

6. Carregue os dados iniciais:
Este comando personalizado ir√° ler os ficheiros .csv e popular a sua base de dados com os utilizadores e as m√©tricas.
python manage.py load_initial_data


7. (Opcional) Crie um superutilizador:
Para aceder ao site de administra√ß√£o do Django (/admin/), crie um superutilizador.
python manage.py createsuperuser

‚ñ∂Ô∏è Executar o Servidor
Para iniciar a API, execute o seguinte comando:
python manage.py runserver

A API estar√° dispon√≠vel em http://127.0.0.1:8000

Para acessar a API siga os passos na documenta√ß√£o do frontend que foi desenvolvido em React.
O Reposit√≥rio do Frontend pode ser encontrado aqui: https://github.com/AlexJSMartins/front-end-api-metricas.git

üìñ Endpoints da API

Autentica√ß√£o
POST /api/token/
Descri√ß√£o: Obt√©m um par de tokens (acesso e refresh) ao enviar as credenciais do utilizador.
Corpo do Pedido (Body):
{
    "username": "user@email.com",
    "password": "sua_senha"
}


Resposta de Sucesso:
{
    "refresh": "eyJhbGciOi...",
    "access": "eyJhbGciOi..."
}


Usu√°rios
GET /api/user/me/
Descri√ß√£o: Retorna os dados do usu√°rio atualmente autenticado. Requer um token de acesso v√°lido no cabe√ßalho Authorization.
Cabe√ßalho (Header): Authorization: Bearer <seu_token_de_acesso>
Resposta de Sucesso:
{
    "id": 1,
    "email": "user@email.com",
    "role": "admin"
}


M√©tricas de Performance
GET /api/metrics-data/
Descri√ß√£o: Retorna a lista paginada de m√©tricas de performance. Requer autentica√ß√£o.
Cabe√ßalho (Header): Authorization: Bearer <seu_token_de_acesso>
Par√¢metros de Consulta (Query Params):
page (int): O n√∫mero da p√°gina a ser exibida (ex: ?page=2).
date__gte (string): Filtra por datas maiores ou iguais a (formato: YYYY-MM-DD).
date__lte (string): Filtra por datas menores ou iguais a (formato: YYYY-MM-DD).
ordering (string): Define o campo para ordena√ß√£o. Use um - para ordem descendente (ex: ?ordering=clicks ou ?ordering=-clicks).

üîë Credenciais para Teste
Utilize as seguintes credenciais (do ficheiro users.csv) para testar os diferentes n√≠veis de permiss√£o:

Usu√°rio Admin:
Email: user1@monks.com (ou o que estiver no seu users.csv)
Senha: oeiruhn56146

Usu√°rio Comum:
Email: user2@monks.com (ou o que estiver no seu users.csv)
Senha: 908ijofff
